{"version":3,"sources":["App.js","index.js"],"names":["App","cancel","useState","items","setItems","visible","setVisible","howMany","setHowMany","delay","setDelay","error","setError","loading","setLoading","CancelToken","axios","apiCall","query","params","url","post","cancelToken","c","getData","debounce","a","undefined","data","hits","isCancel","message","className","type","placeholder","onChange","e","target","value","onClick","min","map","hit","key","objectID","src","image","alt","name","ReactDOM","render","document","getElementById"],"mappings":"+QAyHeA,MArHf,WAAe,IAYTC,EAZS,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAIiBF,oBAAS,GAJ1B,mBAING,EAJM,KAIGC,EAJH,OAKiBJ,mBAAS,IAL1B,mBAKNK,EALM,KAKGC,EALH,OAMaN,mBAAS,KANtB,mBAMNO,EANM,KAMCC,EAND,OAQaR,mBAAS,MARtB,mBAQNS,EARM,KAQCC,EARD,OASiBV,oBAAS,GAT1B,mBASNW,EATM,KASGC,EATH,KAWTC,EAAcC,IAAMD,YAIlBE,EAAU,SAAAC,GACd,IAEMC,EAAM,2BAAuBD,EAAvB,wBAA4CX,EAA5C,yEACNa,EAAG,+EAHY,qDAGZ,+DAFa,oCAUtB,OANaJ,IAAMK,KACjBD,EACA,CAAED,OAAQA,GACV,CAAEG,YAAa,IAAIP,EAAY,SAAAQ,GAAC,OAAKtB,EAASsB,OAO5CC,EAAUC,mBAAQ,sCAAC,WAAeP,GAAf,eAAAQ,EAAA,wDACT,KAAVR,EADmB,gBAErBd,EAAS,IAFY,8BAIrBU,GAAW,GAJU,SAOnBF,EAAS,WAEMe,IAAX1B,GACFA,EAAO,6CAVU,UAaAgB,EAAQC,GAbR,QAabU,EAba,OAenBd,GAAW,GACXV,EAASwB,EAAKA,KAAKC,MAhBA,kDAkBfb,IAAMc,SAAN,MACFlB,EAAS,KAAImB,SAEbnB,EAAS,EAAD,IArBS,wDAAD,sDAyBrBH,GAMH,OACE,yBAAKuB,UAAU,OACb,wDACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,2BACEC,KAAK,OACLC,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAIZ,EAAQY,EAAEC,OAAOC,UAElC,4BAAQN,UAAU,UAAUO,QAdhB,WACEjC,GAAR,IAAZD,MAcqB,IAAZA,EAAoB,OAAS,UAGrB,IAAZA,EACC,yBAAK2B,UAAU,aAAf,oBAEE,2BACEC,KAAK,SACLO,IAAI,IACJN,YAAY,KACZC,SAAU,SAAAC,GAAC,OAAI5B,EAAW4B,EAAEC,OAAOC,UANvC,mBASE,2BACEL,KAAK,SACLC,YAAY,QACZC,SAAU,SAAAC,GAAC,OAAI1B,EAAS0B,EAAEC,OAAOC,WAGnC,MACS,IAAZzB,EACC,yBAAKmB,UAAU,WACb,+CAEA,KACO,OAAVrB,EAAiB,uBAAGqB,UAAU,SAASrB,GAAa,KACrD,wBAAIqB,UAAU,cACX7B,GACCA,EAAMsC,IAAI,SAAAC,GACR,OACE,wBAAIC,IAAKD,EAAIE,SAAUZ,UAAU,QAC/B,yBAAKa,IAAKH,EAAII,MAAOd,UAAU,WAAWe,IAAI,QAC9C,yBAAKf,UAAU,aACb,uBAAGA,UAAU,aAAaU,EAAIM,cCxGlDC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6bcf2cfa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { debounce } from \"lodash\";\nimport axios from \"axios\";\n\nfunction App() {\n  // Storage for Hits.\n  const [items, setItems] = useState([]);\n  // Aditional search params.\n  const [visible, setVisible] = useState(false);\n  const [howMany, setHowMany] = useState(16);\n  const [delay, setDelay] = useState(200);\n  // Save loading state.\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  let CancelToken = axios.CancelToken;\n  let cancel;\n\n  // Normally I put the services in a diferent module, but this is a small SPA.\n  const apiCall = query => {\n    const algoliaAgent = \"Algolia%20for%20JavaScript%20(3.33.0)%3B%20Browser\";\n    const algoliaApiKey = \"6be0576ff61c053d5f9a3225e2a90f76\";\n    const params = `query=ikea&query=${query}&hitsPerPage=${howMany}&attributesToRetrieve=%5B%22name%22%2C%22objectID%22%2C%22image%22%5D`;\n    const url = `https://latency-dsn.algolia.net/1/indexes/ikea/query?x-algolia-agent=${algoliaAgent}&x-algolia-application-id=latency&x-algolia-api-key=${algoliaApiKey}`;\n\n    const hits = axios.post(\n      url,\n      { params: params },\n      { cancelToken: new CancelToken(c => (cancel = c)) }\n    );\n\n    return hits;\n  };\n\n  // Debounce(func(), delay) apply the debounce effect every time \"getData\" is called.\n  const getData = debounce(async function(query) {\n    if (query === \"\") {\n      setItems([]);\n    } else {\n      setLoading(true);\n      try {\n        //1 Delete previous errors.\n        setError(null);\n        //2 Cancel pending responses.\n        if (cancel !== undefined) {\n          cancel(\"The request has been canceled by the user\");\n        }\n        //3 Make the ajax call and save the response in data.\n        const data = await apiCall(query);\n        //4 Store the data on state.\n        setLoading(false);\n        setItems(data.data.hits);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          setError(err.message);\n        } else {\n          setError(err);\n        }\n      }\n    }\n  }, delay);\n\n  const handleClick = () => {\n    visible === false ? setVisible(true) : setVisible(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Swarovski Code Challenge</h2>\n      <div className=\"container\">\n        <div className=\"input-field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter query\"\n            onChange={e => getData(e.target.value)}\n          />\n          <button className=\"visible\" onClick={handleClick}>\n            {visible === false ? \"More\" : \"Less\"}\n          </button>\n        </div>\n        {visible === true ? (\n          <div className=\"show-hide\">\n            Product per page:\n            <input\n              type=\"number\"\n              min=\"1\"\n              placeholder=\"16\"\n              onChange={e => setHowMany(e.target.value)}\n            />\n            Delay on search:\n            <input\n              type=\"number\"\n              placeholder=\"200ms\"\n              onChange={e => setDelay(e.target.value)}\n            />\n          </div>\n        ) : null}\n        {loading === true ? (\n          <div className=\"loading\">\n            <strong>Loading...</strong>\n          </div>\n        ) : null}\n        {error !== null ? <p className=\"error\">{error}</p> : null}\n        <ul className=\"list-items\">\n          {items &&\n            items.map(hit => {\n              return (\n                <li key={hit.objectID} className=\"card\">\n                  <img src={hit.image} className=\"card-img\" alt=\"...\" />\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">{hit.name}</p>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}